/**
 * Daystar Multi-Purpose Co-op Society - Mixins
 *
 * Reusable SCSS mixins for the site
 */

// Breakpoint mixins
@mixin breakpoint-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin breakpoint-down($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint) - 0.02) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin breakpoint-between($lower, $upper) {
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
    @media (min-width: map-get($breakpoints, $lower)) and (max-width: map-get($breakpoints, $upper) - 0.02) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$lower} or #{$upper}.";
  }
}

// Flexbox mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Typography mixins
@mixin heading-style($size, $weight: $font-weight-semibold, $line-height: $line-height-sm) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
  margin-bottom: $spacer;
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Box shadow mixins
@mixin shadow-sm {
  box-shadow: $box-shadow-sm;
}

@mixin shadow-md {
  box-shadow: $box-shadow;
}

@mixin shadow-lg {
  box-shadow: $box-shadow-lg;
}

// Card mixins
@mixin card-base {
  background-color: $white;
  border-radius: $border-radius;
  box-shadow: $box-shadow-sm;
  padding: $spacer;
}

@mixin card-hover {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: $box-shadow;
  }
}

// Button mixins
@mixin button-base {
  display: inline-block;
  font-weight: $font-weight-medium;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $border-width solid transparent;
  padding: $btn-padding-y $btn-padding-x;
  font-size: $btn-font-size;
  line-height: $btn-line-height;
  border-radius: $btn-border-radius;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  
  &:focus {
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba($primary-color, 0.25);
  }
  
  &:disabled {
    opacity: 0.65;
    pointer-events: none;
  }
}

@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  color: color-contrast($background);
  background-color: $background;
  border-color: $border;

  &:hover {
    color: color-contrast($hover-background);
    background-color: $hover-background;
    border-color: $hover-border;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba($background, 0.5);
  }

  &:active {
    color: color-contrast($active-background);
    background-color: $active-background;
    border-color: $active-border;
  }
}

@mixin button-outline-variant($color, $color-hover: color-contrast($color), $active-background: $color, $active-border: $color) {
  color: $color;
  border-color: $color;
  background-color: transparent;

  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus {
    box-shadow: 0 0 0 0.2rem rgba($color, 0.5);
  }

  &:active {
    color: color-contrast($active-background);
    background-color: $active-background;
    border-color: $active-border;
  }
}

// Form mixins
@mixin form-control {
  display: block;
  width: 100%;
  height: $input-height;
  padding: $btn-padding-y $btn-padding-x;
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;
  border-radius: $input-border-radius;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

  &:focus {
    color: $input-color;
    background-color: $input-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    box-shadow: $input-focus-box-shadow;
  }

  &::placeholder {
    color: $input-placeholder-color;
    opacity: 1;
  }

  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    opacity: 1;
  }
}

// Helper function for color contrast
@function color-contrast($background) {
  $lightness: lightness($background);
  
  @if ($lightness > 60) {
    @return $gray-900;
  } @else {
    @return $white;
  }
}

// Gradient mixins
@mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {
  background-image: linear-gradient($deg, $start-color, $end-color);
}

@mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
}

@mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
}

// Animation mixins
@mixin fade-in($duration: 0.3s, $delay: 0s) {
  animation: fadeIn $duration ease-in-out $delay forwards;
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin slide-in-up($duration: 0.3s, $delay: 0s, $distance: 20px) {
  animation: slideInUp $duration ease-in-out $delay forwards;
  
  @keyframes slideInUp {
    from {
      transform: translateY($distance);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
}

// Accessibility mixins
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

@mixin focus-ring {
  outline: none;
  box-shadow: 0 0 0 3px rgba($primary-color, 0.5);
}

// Responsive image mixin
@mixin img-fluid {
  max-width: 100%;
  height: auto;
}

// Clearfix mixin
@mixin clearfix {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}
